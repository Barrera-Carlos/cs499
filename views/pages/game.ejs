<!DOCTYPE html>
<html>
<head>
    <% include ../partials/header.ejs %>
</head>

<body onload = "roomSelect()">
<p id="room name" ><%= roomId %></p>
<p id="testP">test did not work</p>

<script src="/socket.io/socket.io.js"></script>
<script src="https://code.jquery.com/jquery-1.11.1.js"></script>
<script>

    const socket = io();
    let playerName;
    let roomName
    let trumpCard;
    let round = 10;
    let fullDeck ;
    let hand ;

    function createDeck() {
        var suitName = ["diamond", "club", "heart", "spade"];
        var count = 0;
        fullDeck = [];

        for(count; count < 4; count++) {

            for (let i = 1; i < 13; i++) {
                var card = {
                    number: (i % 13) + 1,
                    suit: suitName[count]
                }

                fullDeck.push(card);
            }
        }
    }

    function shuffleDeck() {
        var currentIndex = fullDeck.length, temporaryValue, randomIndex;

        // While there remain elements to shuffle...
        while (0 !== currentIndex) {

            // Pick a remaining element...
            randomIndex = Math.floor(Math.random() * currentIndex);
            currentIndex -= 1;

            // And swap it with the current element.
            temporaryValue = fullDeck[currentIndex];
            fullDeck[currentIndex] = fullDeck[randomIndex];
            fullDeck[randomIndex] = temporaryValue
        }
    }

    function deal(myNumber) {

        hand = [];
        var firstHand = {
            userNumber: (myNumber % 4) + 1,
            pHand : []
        }

        var secondHand = {
            userNumber: (myNumber % 4) + 2,
            pHand : []
        }

        var thirdHand = {
            userNumber: (myNumber % 4) + 3,
            pHand : []
        }

        var handCount;
        for (let i = 52, j = 1 ; i >= (52 - (round * 4)); --i, ++j){

            handCount = (myNumber + j) % 4;

            switch (handCount) {
                case (myNumber + 1) % 4:
                    firstHand.pHand.push(fullDeck[i]);
                    break;
                case (myNumber + 2) % 4:
                    secondHand.pHand.push(fullDeck[i]);
                    break;
                case (myNumber + 3) % 4:
                    thirdHand.pHand.push(fullDeck[i]);
                    break;
                case myNumber % 4:
                    hand.push(fullDeck[i]);
            }
        }

        trumpCard = fullDeck[(51 - (round * 4))]
        let array1String = JSON.stringify(firstHand);
        let array2String = JSON.stringify(secondHand);
        let array3String = JSON.stringify(thirdHand);
        let stringTrump = JSON.stringify(trumpCard);

        socket.emit('deal', 'deal not being created');
    }


    function createPlayer (playerNum){
        playerName = {
            playerNumber : playerNum,
            isDealer : false,
            turnToPlay : false,
            chosenNumOfTricks : 0,
            wonTricksInRound : 0,
            totalPoints : 0,
        };
    }

    /**
     * this function retrives the poster room name and sends it to
     * the server
     */
    function roomSelect(){
        //gets the room name given by logIns.ejs post.
        let roomNameTag = document.getElementById("room name");
        roomName = String(roomNameTag.textContent);

        //sends room name to the server
        socket.emit('join', roomName);


    }

    /**
     * after the server receives the room name, it returns the users
     * room number 1-4.
     */
    socket.on('join', (msg) => {
        // msg should be tested if its in the correct range of 1-4;
        document.getElementById("testP").innerHTML = String(msg);

        createPlayer(Number(msg));

        if(playerName.playerNumber === 1)
            playerName.isDealer = true;

        createDeck();
        shuffleDeck();


        if(playerName.playerNumber === 4){
            socket.emit('startDeal', roomName, "all players have connected", JSON.stringify(fullDeck));
        }

    });

    socket.on('startDeal', (allConnected) => {
        if(playerName.isDealer && allConnected) {
            deal(playerName.playerNumber, round);
        }

    });


</script>
</body>
</html>